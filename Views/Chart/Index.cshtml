
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/DataTablesLayout.cshtml";
}


<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Chart</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Home</a></li>
                        <li class="breadcrumb-item active">DataTables</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">

                    <!-- /.card -->
                    <div class="card">

                        <div class="card-header">
                            <h3>Employee Status</h3>
                        </div>
                        
                        <div>
                            <canvas id="EmployeeStatusChart"></canvas>
                        </div>                        

                    </div>


                    <div class="card">

                        <div class="card-header">
                            <h3>Employee Count in Departments</h3>
                        </div>

                        <div>
                            <canvas id="myChart"></canvas>
                        </div>

                    </div>


                    <!-- /.card -->
                </div>
                <!-- /.col -->
            </div>
            <!-- /.row -->
        </div>
        <!-- /.container-fluid -->
    </section>
    <!-- /.content -->


</div>



@section Scripts{
    <script src="~/adminlte-3.2.0/plugins/jquery/jquery.min.js"></script>
    <!-- Bootstrap 4 -->
    <script src="~/adminlte-3.2.0/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- DataTables  & Plugins -->
    <script src="~/adminlte-3.2.0/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/adminlte-3.2.0/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/adminlte-3.2.0/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/adminlte-3.2.0/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/adminlte-3.2.0/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/adminlte-3.2.0/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
    <script src="~/adminlte-3.2.0/plugins/jszip/jszip.min.js"></script>
    <script src="~/adminlte-3.2.0/plugins/pdfmake/pdfmake.min.js"></script>
    <script src="~/adminlte-3.2.0/plugins/pdfmake/vfs_fonts.js"></script>
    <script src="~/adminlte-3.2.0/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
    <script src="~/adminlte-3.2.0/plugins/datatables-buttons/js/buttons.print.min.js"></script>
    <script src="~/adminlte-3.2.0/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>


    <!-- AdminLTE App -->
    <script src="~/adminlte-3.2.0/dist/js/adminlte.min.js"></script>
    <!-- AdminLTE for demo purposes -->
    @* <script src="~/adminlte-3.2.0/dist/js/demo.js"></script> *@

    <!-- Page specific script -->
    <script src="~/js/chartscript.js"></script>


    @* sweet alert *@
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


    <script>
        const ctx = document.getElementById('EmployeeStatusChart');

        async function fetchData() {
            const APIurlActive = "https://localhost:7021/api/Information/GetALlActiveEmployee";
            const APIurlResign = "https://localhost:7021/api/Information/GetALlResignEmployee";

            try {
                const responseActive = await fetch(APIurlActive);
                if (!responseActive.ok) {
                    throw new Error(`HTTP error! Status: ${responseActive.status}`);
                }
                const dataActive = await responseActive.json();

                const responseResign = await fetch(APIurlResign);
                if (!responseResign.ok) {
                    throw new Error(`HTTP error! Status: ${responseResign.status}`);
                }
                const dataResign = await responseResign.json();
                
                // Process the data
                console.log('length Active Employees:', dataActive.data.length);
                console.log('length Resigned Employees:', dataResign.data.length);
                createPieChart(dataActive.data.length, dataResign.data.length);


            } catch (error) {
                console.error('Error fetching data:', error);
            }
        }

        fetchData();        


        function createPieChart(activeEmployees, resignedEmployees) {
            const data = {
                labels: ['Active Employees', 'Resigned Employees'],
                datasets: [{
                    label: '# Status',
                    data: [activeEmployees, resignedEmployees],
                    backgroundColor: ['rgba(75, 192, 192, 0.2)', 'rgba(255, 99, 132, 0.2)'],
                    borderColor: ['rgb(255, 99, 132)', 'rgb(75, 192, 192)'],
                    borderWidth: 1
                }]
            };

            new Chart(ctx, {
                type: 'doughnut',
                data: data,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            grid: {
                                display: false
                            }
                        },
                        y: {
                            grid: {
                                display: false,
                                beginAtZero: false
                            }
                        }
                    }
                }
            });

        
        }

                     
        
    </script>

    <script>
        const ctx2 = document.getElementById('myChart');

        async function fetchDataAndCreateChart() {
            const apiUrl = "https://localhost:7021/api/Information/CountActiveEmployeesByDepartment"; // Replace with your actual API endpoint

            try {
                const response = await fetch(apiUrl);
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }

                const data = await response.json();
                const departmentNames = data.data.map(item => item.departmentName);
                const employeeCounts = data.data.map(item => item.employeeCount);

                new Chart(ctx2, {
                    type: 'bar',
                    data: {
                        labels: departmentNames,
                        datasets: [
                            {
                                label: 'Employee Count',
                                data: employeeCounts,
                                backgroundColor: 'rgba(75, 192, 192, 0.2)', // Bar color
                                borderColor: 'rgba(75, 192, 192, 1)', // Border color
                                borderWidth: 1
                            }
                        ]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            } catch (error) {
                console.error('Error fetching or processing data:', error);
            }
        }

        fetchDataAndCreateChart();
    </script>
}

